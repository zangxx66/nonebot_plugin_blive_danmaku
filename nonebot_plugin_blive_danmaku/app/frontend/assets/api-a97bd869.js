var t=Object.defineProperty,a=(a,e,s)=>(((a,e,s)=>{e in a?t(a,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[e]=s})(a,"symbol"!=typeof e?e+"":e,s),s);import{aT as e,aU as s}from"./vendor-3efffbad.js";e.locale("zh-cn");const n=t=>{if(0===t)return"/";return e.unix(t).format("yyyy-MM-D HH:mm:ss")},o=t=>e(t).format("HH:mm:ss"),r=t=>{const a=window.location.hash.split("?",2)[1];if(a){const e=new RegExp("(^|&)"+t+"=([^&]*)(&|$)"),s=a.match(e);return null!=s?decodeURIComponent(s[2]):null}},i=`${location.protocol}//${location.host}/danmaku`;const l=new class{constructor(t){a(this,"baseUrl"),this.baseUrl=t}getInsideConfig(){return{baseUrl:this.baseUrl,params:{}}}async get(t,a={},e=null){const n=this.getInsideConfig();n.params=a;return(await s.get(n.baseUrl+t,n)).data}async post(t,a={},e=null){const n=this.getInsideConfig();null!=e&&Object.assign(n,e);return(await s.post(n.baseUrl+t,a,n)).data}}(i);const c=new class{async GetRoomList(t={}){return await l.get("/api/get_sub_list",t)}async GetRoomInfo(t={}){return await l.get("/api/get_room",t)}async GetCoverUrl(t={}){return await l.get("/api/get_cover",t)}async GetRoomDanmaku(t={}){return await l.get("/api/get_room_danmaku",t)}};export{n as C,o as F,i as b,r as g,c as r};
